{"ast":null,"code":"var _jsxFileName = \"/home/gveitch/Developement/code/Phase_2/DBFZ_Team/my-app/src/components/CharComments.js\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CharComments(_ref) {\n  let {\n    currentChar\n  } = _ref;\n  const comments = currentChar.comments.sort((a, b) => parseFloat(b.votes) - parseFloat(a.votes)).map(entry => {\n    let filler = entry;\n    let update = filler.votes + 1;\n    const otherComments = [...currentChar.comments.filter(com => com != entry)];\n    function handleClick(e) {\n      e.preventDefault();\n      filler.votes = update;\n      fetch(`http://localhost:3000/characters/${currentChar.id}`, {\n        method: 'PATCH',\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...currentChar,\n          comments: [...otherComments, filler]\n        })\n      }).then(update + 1);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"details\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: entry.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"score\",\n          onClick: e => handleClick(e),\n          children: entry.votes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: entry.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: comments\n  }, void 0, false);\n}\n_c = CharComments;\nexport default CharComments;\nvar _c;\n$RefreshReg$(_c, \"CharComments\");","map":{"version":3,"names":["React","useState","CharComments","currentChar","comments","sort","a","b","parseFloat","votes","map","entry","filler","update","otherComments","filter","com","handleClick","e","preventDefault","fetch","id","method","headers","body","JSON","stringify","then","name","content"],"sources":["/home/gveitch/Developement/code/Phase_2/DBFZ_Team/my-app/src/components/CharComments.js"],"sourcesContent":["import React , { useState } from \"react\"\n\nfunction CharComments ( { currentChar } ) {\n\n    const comments = currentChar.comments.sort((a, b) => parseFloat(b.votes) - parseFloat(a.votes)).map((entry) => {\n        let filler = entry\n        let update = filler.votes + 1\n        const otherComments = [...currentChar.comments.filter(com => com!=entry)]\n\n        function handleClick(e){\n            e.preventDefault()\n            filler.votes = update\n\n            fetch(`http://localhost:3000/characters/${currentChar.id}`, {\n                method : 'PATCH',\n                headers : { \"content-type\" : \"application/json\"},\n                body : JSON.stringify({...currentChar,\n                    comments : [...otherComments , filler]\n                   })\n\n\n            }).then(update + 1)\n\n        }\n\n        return (\n            <div className=\"comments\">\n                <span className=\"details\">\n                    <ul>{entry.name}</ul><span className=\"score\" onClick={e => handleClick(e)}>{entry.votes}</span>\n                    <ul>{entry.content}</ul>\n                </span>\n            </div>\n        )\n    })\n\n\n    return(\n        <>\n        {comments}\n        </>\n    )\n}\n\nexport default CharComments;"],"mappings":";AAAA,OAAOA,KAAK,IAAKC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAExC,SAASC,YAAY,OAAqB;EAAA,IAAlB;IAAEC;EAAY,CAAC;EAEnC,MAAMC,QAAQ,GAAGD,WAAW,CAACC,QAAQ,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKC,UAAU,CAACD,CAAC,CAACE,KAAK,CAAC,GAAGD,UAAU,CAACF,CAAC,CAACG,KAAK,CAAC,CAAC,CAACC,GAAG,CAAEC,KAAK,IAAK;IAC3G,IAAIC,MAAM,GAAGD,KAAK;IAClB,IAAIE,MAAM,GAAGD,MAAM,CAACH,KAAK,GAAG,CAAC;IAC7B,MAAMK,aAAa,GAAG,CAAC,GAAGX,WAAW,CAACC,QAAQ,CAACW,MAAM,CAACC,GAAG,IAAIA,GAAG,IAAEL,KAAK,CAAC,CAAC;IAEzE,SAASM,WAAW,CAACC,CAAC,EAAC;MACnBA,CAAC,CAACC,cAAc,EAAE;MAClBP,MAAM,CAACH,KAAK,GAAGI,MAAM;MAErBO,KAAK,CAAE,oCAAmCjB,WAAW,CAACkB,EAAG,EAAC,EAAE;QACxDC,MAAM,EAAG,OAAO;QAChBC,OAAO,EAAG;UAAE,cAAc,EAAG;QAAkB,CAAC;QAChDC,IAAI,EAAGC,IAAI,CAACC,SAAS,CAAC;UAAC,GAAGvB,WAAW;UACjCC,QAAQ,EAAG,CAAC,GAAGU,aAAa,EAAGF,MAAM;QACtC,CAAC;MAGR,CAAC,CAAC,CAACe,IAAI,CAACd,MAAM,GAAG,CAAC,CAAC;IAEvB;IAEA,oBACI;MAAK,SAAS,EAAC,UAAU;MAAA,uBACrB;QAAM,SAAS,EAAC,SAAS;QAAA,wBACrB;UAAA,UAAKF,KAAK,CAACiB;QAAI;UAAA;UAAA;UAAA;QAAA,QAAM;UAAM,SAAS,EAAC,OAAO;UAAC,OAAO,EAAEV,CAAC,IAAID,WAAW,CAACC,CAAC,CAAE;UAAA,UAAEP,KAAK,CAACF;QAAK;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC/F;UAAA,UAAKE,KAAK,CAACkB;QAAO;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA;IACrB;MAAA;MAAA;MAAA;IAAA,QACL;EAEd,CAAC,CAAC;EAGF,oBACI;IAAA,UACCzB;EAAQ,iBACN;AAEX;AAAC,KAvCQF,YAAY;AAyCrB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module"}