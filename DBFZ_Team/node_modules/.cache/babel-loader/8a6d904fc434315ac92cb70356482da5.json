{"ast":null,"code":"var _jsxFileName = \"/home/gveitch/Developement/code/Phase_5/Phase-5-Project/DBFZ_Team/src/components/CharComments.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CharComments(_ref) {\n  let {\n    char\n  } = _ref;\n  const comments = char.comments.sort((a, b) => parseFloat(b.votes) - parseFloat(a.votes)).map(entry => {\n    let filler = entry;\n    const otherComments = [...char.comments.filter(com => com !== entry)];\n    const votes = document.getElementById(filler.id);\n    function handleClick(e) {\n      e.preventDefault();\n      filler.votes = filler.votes + 1;\n      fetch(`http://localhost:3000/characters/${char.id}`, {\n        method: 'PATCH',\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...char,\n          comments: [...otherComments, filler]\n        })\n      }).then(filler.votes + 1).then(votes.innerHTML = filler.votes);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"details\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: entry.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"score\",\n          onClick: e => handleClick(e),\n          id: filler.id,\n          children: filler.votes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: entry.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: comments\n  }, void 0, false);\n}\n_c = CharComments;\nexport default CharComments;\nvar _c;\n$RefreshReg$(_c, \"CharComments\");","map":{"version":3,"names":["React","CharComments","char","comments","sort","a","b","parseFloat","votes","map","entry","filler","otherComments","filter","com","document","getElementById","id","handleClick","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","innerHTML","name","content"],"sources":["/home/gveitch/Developement/code/Phase_5/Phase-5-Project/DBFZ_Team/src/components/CharComments.js"],"sourcesContent":["import React from \"react\"\n\nfunction CharComments ( { char } ) {\n\n    const comments = char.comments.sort((a, b) => parseFloat(b.votes) - parseFloat(a.votes)).map((entry) => {\n        let filler = entry\n        const otherComments = [...char.comments.filter(com => com!==entry)]\n        const votes = document.getElementById(filler.id)\n\n\n        function handleClick(e){\n            e.preventDefault()\n            filler.votes = filler.votes+1\n\n            fetch(`http://localhost:3000/characters/${char.id}`, {\n                method : 'PATCH',\n                headers : { \"content-type\" : \"application/json\"},\n                body : JSON.stringify({...char,\n                    comments : [...otherComments , filler]\n                   })\n\n\n            })\n            .then(filler.votes+1)\n            .then(votes.innerHTML=filler.votes)\n\n        }\n\n        return (\n            <div className=\"comments\">\n                <span className=\"details\">\n                    <ul>{entry.name}</ul><span className=\"score\" onClick={e => handleClick(e)} id={filler.id}>{filler.votes}</span>\n                    <ul>{entry.content}</ul>\n                </span>\n            </div>\n        )\n    })\n\n\n    return(\n        <>\n        {comments}\n        </>\n    )\n}\n\nexport default CharComments;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAAA;AAEzB,SAASC,YAAY,OAAc;EAAA,IAAX;IAAEC;EAAK,CAAC;EAE5B,MAAMC,QAAQ,GAAGD,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKC,UAAU,CAACD,CAAC,CAACE,KAAK,CAAC,GAAGD,UAAU,CAACF,CAAC,CAACG,KAAK,CAAC,CAAC,CAACC,GAAG,CAAEC,KAAK,IAAK;IACpG,IAAIC,MAAM,GAAGD,KAAK;IAClB,MAAME,aAAa,GAAG,CAAC,GAAGV,IAAI,CAACC,QAAQ,CAACU,MAAM,CAACC,GAAG,IAAIA,GAAG,KAAGJ,KAAK,CAAC,CAAC;IACnE,MAAMF,KAAK,GAAGO,QAAQ,CAACC,cAAc,CAACL,MAAM,CAACM,EAAE,CAAC;IAGhD,SAASC,WAAW,CAACC,CAAC,EAAC;MACnBA,CAAC,CAACC,cAAc,EAAE;MAClBT,MAAM,CAACH,KAAK,GAAGG,MAAM,CAACH,KAAK,GAAC,CAAC;MAE7Ba,KAAK,CAAE,oCAAmCnB,IAAI,CAACe,EAAG,EAAC,EAAE;QACjDK,MAAM,EAAG,OAAO;QAChBC,OAAO,EAAG;UAAE,cAAc,EAAG;QAAkB,CAAC;QAChDC,IAAI,EAAGC,IAAI,CAACC,SAAS,CAAC;UAAC,GAAGxB,IAAI;UAC1BC,QAAQ,EAAG,CAAC,GAAGS,aAAa,EAAGD,MAAM;QACtC,CAAC;MAGR,CAAC,CAAC,CACDgB,IAAI,CAAChB,MAAM,CAACH,KAAK,GAAC,CAAC,CAAC,CACpBmB,IAAI,CAACnB,KAAK,CAACoB,SAAS,GAACjB,MAAM,CAACH,KAAK,CAAC;IAEvC;IAEA,oBACI;MAAK,SAAS,EAAC,UAAU;MAAA,uBACrB;QAAM,SAAS,EAAC,SAAS;QAAA,wBACrB;UAAA,UAAKE,KAAK,CAACmB;QAAI;UAAA;UAAA;UAAA;QAAA,QAAM;UAAM,SAAS,EAAC,OAAO;UAAC,OAAO,EAAEV,CAAC,IAAID,WAAW,CAACC,CAAC,CAAE;UAAC,EAAE,EAAER,MAAM,CAACM,EAAG;UAAA,UAAEN,MAAM,CAACH;QAAK;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC/G;UAAA,UAAKE,KAAK,CAACoB;QAAO;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA;IACrB;MAAA;MAAA;MAAA;IAAA,QACL;EAEd,CAAC,CAAC;EAGF,oBACI;IAAA,UACC3B;EAAQ,iBACN;AAEX;AAAC,KA1CQF,YAAY;AA4CrB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module"}