{"ast":null,"code":"var _jsxFileName = \"/home/gveitch/Developement/code/Phase_2/DBFZ_Team/my-app/src/components/CharComments.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CharComments(_ref) {\n  _s();\n  let {\n    currentChar\n  } = _ref;\n  let [update, setUpdate] = useState();\n  const comments = currentChar.comments.sort((a, b) => parseFloat(b.votes) - parseFloat(a.votes)).map(entry => {\n    let filler = entry;\n    setUpdate(filler.votes + 1);\n    function handleClick(e) {\n      e.preventDefault();\n      filler.votes = update;\n      console.log(filler);\n      fetch(`http://localhost:3000/characters/${currentChar.id}`, {\n        method: 'PATCH',\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...currentChar,\n          [entry.id]: filler\n        })\n      }).then(setUpdate(update + 1));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"details\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: entry.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"score\",\n          onClick: e => handleClick(e),\n          children: update\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: entry.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: comments\n  }, void 0, false);\n}\n_s(CharComments, \"rqn414JWE0kZKWo4UhNw5phJlFM=\");\n_c = CharComments;\nexport default CharComments;\nvar _c;\n$RefreshReg$(_c, \"CharComments\");","map":{"version":3,"names":["React","useState","CharComments","currentChar","update","setUpdate","comments","sort","a","b","parseFloat","votes","map","entry","filler","handleClick","e","preventDefault","console","log","fetch","id","method","headers","body","JSON","stringify","then","name","content"],"sources":["/home/gveitch/Developement/code/Phase_2/DBFZ_Team/my-app/src/components/CharComments.js"],"sourcesContent":["import React , { useState } from \"react\"\n\nfunction CharComments ( { currentChar } ) {\n\n    let [update, setUpdate] = useState()\n\n    const comments = currentChar.comments.sort((a, b) => parseFloat(b.votes) - parseFloat(a.votes)).map((entry) => {\n        let filler = entry\n        setUpdate(filler.votes + 1)\n\n        function handleClick(e){\n            e.preventDefault()\n            filler.votes = update\n            console.log(filler)\n\n            fetch(`http://localhost:3000/characters/${currentChar.id}`, {\n                method : 'PATCH',\n                headers : { \"content-type\" : \"application/json\"},\n                body : JSON.stringify({...currentChar,\n                    [entry.id] : filler\n                   })\n\n\n            }).then(setUpdate(update + 1))\n\n        }\n\n        return (\n            <div className=\"comments\">\n                <span className=\"details\">\n                    <ul>{entry.name}</ul><span className=\"score\" onClick={e => handleClick(e)}>{update}</span>\n                    <ul>{entry.content}</ul>\n\n                </span>\n            </div>\n        )\n    })\n\n\n    return(\n        <>\n        {comments}\n        </>\n    )\n}\n\nexport default CharComments;"],"mappings":";;AAAA,OAAOA,KAAK,IAAKC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAExC,SAASC,YAAY,OAAqB;EAAA;EAAA,IAAlB;IAAEC;EAAY,CAAC;EAEnC,IAAI,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,EAAE;EAEpC,MAAMK,QAAQ,GAAGH,WAAW,CAACG,QAAQ,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKC,UAAU,CAACD,CAAC,CAACE,KAAK,CAAC,GAAGD,UAAU,CAACF,CAAC,CAACG,KAAK,CAAC,CAAC,CAACC,GAAG,CAAEC,KAAK,IAAK;IAC3G,IAAIC,MAAM,GAAGD,KAAK;IAClBR,SAAS,CAACS,MAAM,CAACH,KAAK,GAAG,CAAC,CAAC;IAE3B,SAASI,WAAW,CAACC,CAAC,EAAC;MACnBA,CAAC,CAACC,cAAc,EAAE;MAClBH,MAAM,CAACH,KAAK,GAAGP,MAAM;MACrBc,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;MAEnBM,KAAK,CAAE,oCAAmCjB,WAAW,CAACkB,EAAG,EAAC,EAAE;QACxDC,MAAM,EAAG,OAAO;QAChBC,OAAO,EAAG;UAAE,cAAc,EAAG;QAAkB,CAAC;QAChDC,IAAI,EAAGC,IAAI,CAACC,SAAS,CAAC;UAAC,GAAGvB,WAAW;UACjC,CAACU,KAAK,CAACQ,EAAE,GAAIP;QACd,CAAC;MAGR,CAAC,CAAC,CAACa,IAAI,CAACtB,SAAS,CAACD,MAAM,GAAG,CAAC,CAAC,CAAC;IAElC;IAEA,oBACI;MAAK,SAAS,EAAC,UAAU;MAAA,uBACrB;QAAM,SAAS,EAAC,SAAS;QAAA,wBACrB;UAAA,UAAKS,KAAK,CAACe;QAAI;UAAA;UAAA;UAAA;QAAA,QAAM;UAAM,SAAS,EAAC,OAAO;UAAC,OAAO,EAAEZ,CAAC,IAAID,WAAW,CAACC,CAAC,CAAE;UAAA,UAAEZ;QAAM;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC1F;UAAA,UAAKS,KAAK,CAACgB;QAAO;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA;IAErB;MAAA;MAAA;MAAA;IAAA,QACL;EAEd,CAAC,CAAC;EAGF,oBACI;IAAA,UACCvB;EAAQ,iBACN;AAEX;AAAC,GA1CQJ,YAAY;AAAA,KAAZA,YAAY;AA4CrB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module"}